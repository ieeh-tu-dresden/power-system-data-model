---
  name: Create class diagram

  on:
    pull_request:
      branches:
        - main

    workflow_call:

  jobs:
    create-class-diagram:
      name: Create class diagram
      runs-on: ubuntu-latest

      steps:
        - name: Check out repository
          uses: actions/checkout@v4
          with:
            ref: ${{ github.event.pull_request.head.ref }}

        - name: Install uv
          uses: astral-sh/setup-uv@v5
          with:
            version: "0.5.28"  # install a specific version of uv
            enable-cache: true

        - name: Install the project
          run: uv sync

        - name: Install graphviz
          run: sudo apt-get install -y graphviz graphviz-dev

        - name: Install erdantic
          run: uv add "erdantic>=1.0.5"
        
        - name: Register custom erdantic plugin for pydantic
          run: uv run python ./.github/workflows/erdantic-pydantic-plugin.py

        - name: Generate schema diagram files
          run: |
            uv run python -c 'import erdantic as erd
            from psdm.steadystate_case.case import Case as SteadystateCase
            from psdm.topology.topology import Topology
            from psdm.topology_case.case import Case as TopologyCase
            from pathlib import Path
            f_top = Path(f"./docs/topology.png")
            f_top.parent.mkdir(exist_ok=True, parents=True)
            erd.create(Topology).draw(f_top)
            f_topc = Path(f"./docs/topology_case.png")
            f_topc.parent.mkdir(exist_ok=True, parents=True)
            erd.create(TopologyCase).draw(f_topc)
            f_ssc = Path(f"./docs/steady_state_case.png")
            f_ssc.parent.mkdir(exist_ok=True, parents=True)
            erd.create(SteadystateCase).draw(f_ssc)'

        - name: Stage schema diagram files
          run: git add ./docs

        - name: Commit and push changes
          run: |
            git config user.name "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git commit -m "build(docs): update schema diagram files" || echo "No changes to commit"
            git push origin HEAD:${{ github.event.pull_request.head.ref }}
  
        - name: Delete unstaged changes
          run: git restore .